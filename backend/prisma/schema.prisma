// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  
  username String @unique
  password String

  status String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  admin Admin[]
  dosen Dosen[]
  mahasiswa Mahasiswa[]
}

model Admin{
  id Int @id @default(autoincrement())
  user_id Int
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
}

model Dosen{
  id Int @id @default(autoincrement())
  user_id Int

  nip String @unique
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  jadwal Jadwal[]
}

model Mahasiswa{
  id Int @id @default(autoincrement())
  user_id Int
  kelas_id Int

  nim String @unique
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])
  kelas Kelas @relation(fields: [kelas_id], references: [id])

  matkulmahasiswa MatakuliahMahasiswa[]
  nilai Nilai[]
}

model Jurusan {
  id Int @id @default(autoincrement())
  nama_jurusan String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  kelas Kelas[]
  matakuliah Matakuliah[]
}

model Kelas {
  id Int @id @default(autoincrement())
  jurusan_id Int

  nama_kelas String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jurusan Jurusan @relation(fields: [jurusan_id], references: [id])

  mahasiswa Mahasiswa[]
  jadwal Jadwal[]
}

model Matakuliah {
  id Int @id @default(autoincrement())
  jurusan_id Int

  kode_matakuliah String
  nama_matakuliah String
  semester Int?
  sks Int

  matkulPilihan Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jurusan Jurusan @relation(fields: [jurusan_id], references: [id])

  jadwal Jadwal[]
  matkulmahasiswa MatakuliahMahasiswa[]
}

model Jadwal {
  id Int @id @default(autoincrement())
  dosen_id Int
  matkul_id Int
  kelas_id Int
  tapel_id Int

  hari String
  jam_mulai String
  jam_selesai String


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  dosen Dosen @relation(fields: [dosen_id], references: [id])
  matkul Matakuliah @relation(fields: [matkul_id], references: [id])
  kelas Kelas @relation(fields: [kelas_id], references: [id])
  tapel TahunPelajaran @relation(fields: [tapel_id], references: [id])

  nilai Nilai[]

}

model MatakuliahMahasiswa{
  id Int @id @default(autoincrement())
  mahasiswa_id Int
  matkul_id Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mahasiswa Mahasiswa @relation(fields: [mahasiswa_id], references: [id])
  matkul Matakuliah @relation(fields: [matkul_id], references: [id])

}

model TahunPelajaran{
  id Int @id @default(autoincrement())
  tahun_pelajaran String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jadwal Jadwal[]
}


model Nilai{
  id Int @id @default(autoincrement())
  mahasiswa_id Int
  jadwal_id Int

  nilai String
  bobot Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mahasiswa Mahasiswa @relation(fields: [mahasiswa_id], references: [id])
  jadwal Jadwal @relation(fields: [jadwal_id], references: [id])
}
